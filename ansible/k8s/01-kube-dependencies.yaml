---
- hosts: "masters, workers"
  remote_user: <<REPLACE USER>>
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  
  tasks:
  
  - name: Make the Swap inactive
    command: swapoff -a 

  - name: Remove Swap entry from /etc/fstab.
    lineinfile:
      dest: /etc/fstab
      regexp: swap
      state: absent

  - name: Update apt-get repo and cache
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
  
  - name: Installing Prerequisites for Kubernetes
    apt:
      name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - vim
      - software-properties-common
      state: present

  - name: Add Dockerâ€™s official GPG key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
      filename: docker
      mode: 0600

  - name: Install Docker Engine.
    apt: 
      name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      state: present

  - name: Enable service docker, and enable persistently
    service: 
      name: docker
      enabled: yes

  - name: Add Google official GPG key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes Repository
    apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes
      mode: 0600

  - name: Installing Kubernetes Cluster Packages.
    apt:
      name:
      - kubeadm
      - kubectl
      - kubelet
      state: present

  - name: Enable service kubelet, and enable persistently
    service:
      name: kubelet
      enabled: yes

  - name: Update all packages on a Debian/Ubuntu
    apt:
      update_cache: yes
      upgrade: dist
      
  - name: Reboot box if kernel/libs updated and requested by the system
    shell: sleep 10 && /sbin/shutdown -r now 'Rebooting box to update system libs/kernel as needed' 
    args:
        removes: /var/run/reboot-required
    async: 300
    poll: 0
    ignore_errors: true
      
  - name: Wait for system to become reachable again
    wait_for_connection:
      delay: 60
      timeout: 300

  - name: Verify new update (optional)
    command: uname -mrs
    register: uname_result

  - name: Display new kernel version
    debug:
         var: uname_result.stdout_lines

